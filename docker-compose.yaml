version: "3.9"

services:
  mysql:
    build: docker/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - '${PWD}/docker/volumes:/var/lib/mysql'
    restart: always
    container_name: blog-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - backend

  api:
    build: api
    ports:
      - "${PORT}:5000"
    volumes:
      - ${PWD}/api/:/home/node/project
    restart: always
    container_name: blog-api
    environment:
      SQL_DATABASE: ${MYSQL_DATABASE}
      SQL_PASSWORD: ${MYSQL_PASSWORD}
      SQL_USERNAME: ${MYSQL_USER}
      SQL_PORT: ${MYSQL_PORT}
      SQL_HOST: ${MYSQL_HOST}
      PORT: ${PORT}
    depends_on:
      - mysql
    command: [ "npm", "run", "start.dev" ]
    networks:
      - backend

  frontend:
    build: front-end
    ports:
      - "3000:3000"
    volumes:
      - "${PWD}/front-end/:/home/node/project"
    restart: always
    container_name: blog-frontend
    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
    depends_on:
      - mysql
      - api
    command: [ "npm", "start" ]
    networks:
      - backend

networks:
  backend: